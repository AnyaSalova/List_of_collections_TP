@model WebApplication1.Models.CashCollection

@{
    ViewData["Title"] = "Создание коллекции";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        @Html.LabelFor(m => m.CollectionName, new { @class = "control-label" })
        @Html.EditorFor(m => m.CollectionName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.CollectionName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Amount, new { @class = "control-label" })
        @Html.EditorFor(m => m.Amount, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
        @Html.EditorFor(m => m.Phone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "control-label" })
        @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.IsCompleted, new { @class = "control-label" })
        @Html.EditorFor(m => m.IsCompleted, new { htmlAttributes = new { @class = "form-check-input" } })
    </div>

    <div class="form-group">
        <input type="submit" value="Создать" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Назад к списку</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}